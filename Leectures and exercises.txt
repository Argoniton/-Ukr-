		ІФОРМАЦІЙНІ СИСТЕМИ ТА ТЕХНОЛОГІЇ

Система що реалізовує функції збору, обробки і передачі інформації називається ІНФОРМАЦІЙНА СИСТЕМА.

Найважливішими функціями є:
 * прогнозування
 * планування
 * облік

Автоматизовані інформаційні системи

АВТОМАТИЗОВАНА ІНФОРМАЦІЙНА СИСТЕМА - це сукупність інформаційних, економіко-математичних методів та моделей, технічних програмних засобів призначених для автоматизованої обробки інформації та прийняття рішень.

БАЗА ДАНИХ - це сукупність взаємозалежних даних, що зберігається спільно та організованих згідно схеми БД, так щоб з ними міг працювати користувач.

Система управління і база даних - БАНК ДАНИХ.

У процесі створення і експлуатації взаємодіють користувачі.

Бази даних бувають:
1) структуровані
2) неструктуровані
3) частково структуровані

1) вимагають попередннього структурування і опису структури
 - табличка
Поділяються:
	* по типу використовуваної моделі
		- ієрархічні - є чітка ієрархія
		- мережові - 
		- реляційні
		- змішані
		- мультимоделі

У реляційних моделей, на відміну від ієрархічних та мережних, зв'язки між файлами БД визначаються динамічно в момент виконання запиту. Ці зв'язки визначаються по рівності значення відповідних полів зв'язків, що знаходяться в кожному з цих файлів.
1974 р. - Чемберлін та Бойс представили так звану мову структурованих запитів-SQL.(спочатку називалась:SEQUEL)
1979 р. - перша реляційна база даних.

02/24/2017

Діаграма "сутність-зв'язок"
ER - diagram (module)
Entry - Relationship model
Основні конструктивні моделі є сутності, зв'язки між ними та властивості - атрибути.
Сутність - будь-який помітний об'єкт, який потрібно зберігати в базі даних. (люди, автомобілі, рейси)
Екземпляр - рядок в таблиці, конкретне значення.
Атрибут - іменована характеристика сутності, стовпчик в таблиці. Визначає яка інформація має бути зібрана про сутність, наприклад марка, вага, колір, ціна.

Найважливіший атрибут сутності, який має унікальне значення, для кожного екземпляра сутност (унікальний атрибут ідентифікатор, ID, email, локація(за умови що вона точна))
 
Ключ - мінімальний набір атрибетів, за яким можна однозначно визначити необхідний екземпляр сутності.
Наприклад, якщо номер потягу невідомий, то однозначно його можна визначити набором: час відправлення, локація відправлення та прибуття. З цього набору не можна нічого викинути.

Асоціювання - зв'язок 2 або більше сутностей. Зв'язки - ненапрямлені ребра. Зв'язки мають потужність.
Оскільки одна з основних вимог до організації баз даних - це забезпечення можливості відшукання одних сутностей за значеннями інших.

Прилади зв'язків:
	1 до 1
	багато до 1
	1 до багатьох
	багато до багатьох

Ближче до сунтості буде максимальна кількість екземлярів.

Зробити діаграму сутність-зв'язок що відображає сутності та екземпляри.

ЗАДАЧА
МОЗ України зберігає дані про лікарів:
	для кожного лікаря зберігається якийсь номер, ім'я та рік випузку з вузу
	для кожної поліклініки є координати, номери та назви(можуть повторюватись)
А) Кожен лікар працює в 1 поліклініці та кожна поліклініка має принаймні одного лікаря.
Б) Кожен лікар працює у від 2 до 4 поліклінік. У поліклініці працює від 3 до 10 лікарів.

.mdb
.accdb
.accde - розширення бази даних в режимі виконання
.accdt - розширення файлу шаблонів
.adp - сервер SQL

Задача від КМДА:
	Потрібно створити базу даних про будівлі у Києві.
	
Теорія варіаційних баз даних була створина на початку 70-х років 20 ст. Коддом (Codd) на основі математичної теорії відношень.

Кодд довів що дотримуючись при створенні таблиці зв'язків між ними тільки деяких формалізованих правил можна забезпечити простоту маніпулювання даних -- ця методика отримала назву ФОРМАЛІЗАЦІЯ ДАНИХ.

Правила:
* включайте поля які відносятся до предметної області таблиці
* не перевантажуйте
* не включайте похідні дані та проміжні обчислення (тільки результати)
* включайте лише необхідну інформацію
* розділіть інформацію на найменші логічні одиниці

Таблиця знаходиться у першій нормальній формі, якщо значення всіх полів атомарні в ній відсутні групи полів що повторюються

Зведення даних до 1-ъ нориальної форми назив. структурною нормалізацією.

Таблиця знаходиться у 2й нормальный формі, якщо вона задовольняє умовам 1-ї нормальної форми і будь-яке поле однозначно ідентифікується повним набором ключових полів

У 3й нф якщо задов. умовам 2ї і жодне з неключових полів не ідентифікується за допомогою іншого неключового поля

Є дві категорії команд SQL
1) маніпуляція даними -- мова DML (data manipulation language - manupulate data)
INSERT into Student values(101,'Adam',15);
2) створення баз даних -- мова DDL (data definition language - language to create structures)
CREATE TABLE CUSTOMERS(
 	ID INT NOT NULL,
 	NAME VARCHAR (20) NOT NULL,
 	AGE INT NOT NULL,
 	ADDRESS CHAR (25),
 	PRIMARY KEY (ID)
);
SELECT DISTINCT table
-- select without recurrence

Створення баз даних та таблиці, описуючи їх структуру.

Мова SQL дає можливість додавати, модифікувати та видаляти інформацію в базі даних. Атакож виконувати запити до бази даних.

There are 4 different 	uery Types INSERT, SELECT, UPDATE and DELETE

Microsoft SQL Server
	Enterprise, Developer versions, etc.
	Express version is free of charge
Oracle
MySQL (Oracle, previously Sun Microsystems) MySQL can be used free of charge (open source license), Web sites that use MySQL: YouTube, Wikipedia, Facebook
Microsoft Access
IBM DB2
Sybase

SELECT * FROM Customers
SELECT CustomerName, City FROM Customers;
Where:
* -- argument - the column you want to select
Customers - name of the table
SELECT EmployeeID, FirstName, LastName, HireDate, City FROM Employees
WHERE City = 'London'
GROUP BY somename
-- means select all fields with City attribute set to 'London'.
ORDER BY column_name {ASC|DESC}
-- ascent , or descent
SELECT TOP number|percent column_name(s)
display first n fields


Задача:
	Теми для розробки баз даних
6 тем:
1) навчання студентів
2) довідник людини
3) аеропорт рейс
4) розклад вокзалу
5) база даних товару покупці продавці 
6*) підприємство виготовлення закупки

Створити базу даних
у кожній базі даних треба розробити 5 таблиць
у кожній таблиці не менше 5 стовпців
у кожному стовпці не менше 5 записів
 нключові поля, ступені зв'язків

GROUP BY об'єднує запис з однаковими записами полів

Task people that have the same name:

SELECT Employee.Name, Product.Name FROM Employee, Product
 
TOP or PERSENT - prit top 
DISTINCT - different

У мові можна змінювати назви результуючі стовпчики та об'єднувати іх в один.

SELECT employee.name &'  '& product.name FROM employee INNER JOIN product ON employee.name = product.from;

Lcase - make low caps 

до складу SELECT оператора входять запити, що використовуються для визначення остаточного результату поточного запиту.

Підзапити можуть входити до складу конструкції. WHERE HAVING ORDER BY GROUP BY

ALTER TABLE - використати для зміни, додати або видалити стовпчик, внести обмеження. 1 оператор для 1-го стовпчика або індекса.

UPDATE country -- UPDATE clause			|
SET population = population + 1 -- SET clause	} Statement
WHERE name = 'USA' -- WHERE clause		|

I learn mySQL

CREATE TABLE person (
PersonId SMALLINT UNSIGNED,
name VARCHAR(20),
gender CHAR(1),
state CHAR(2),
city CHAR(14),
CONSTRAINT PKPerson PRIMARY KEY (PersonId)
);

CREATE TABLE education (
PersonId SMALLINT UNSIGNED,
university VARCHAR(20),
CONSTRAINT GraduatedUniversity PRIMARY KEY (PersonId, university),
CONSTRAINT PersonIdFromUniversityFK FOREIGN KEY (PersonID)
	REFERENCES person (PersonId)
);

INSERT INTO person (PersonID, name, gender) VALUES (null, 'Artemii', 'Male');

SELECT PersonId, name, gender FROM person;

SELECT PersonId, name, gender FROM person
WHERE PersonId = 2;

INSERT INTO education (PersonId, university) VALUES (2, 'KNU');

SELECT university FROM education
WHERE PersonId = 1
ORDER BY university;

UPDATE person
SET state = 'VA',
	city = 'Fairfax'
WHERE PersonId = 2;

DELETE FROM person
WHERE PersonId = 3;

DROP TABLE education;
DROP TABLE person;


Select-Determines which columns to include in the query’s result set
From-Identifies the tables from which to draw data and how the tables should be joined
Where-Filters out unwanted data
Group by-Used to group rows together by common column values
Having-Filters out unwanted groups
Order by-Sorts the rows of the final result set by one or more columns

SELECT *
FROM department;

Select clause * indicates all columns in the department table;

SELECT s_0MeTIN1 AS something FROM table;

SELECT DISTINCT university FROM education; -- a list of universities

SELECT ntable.Id, ntable.Name
FROM (SELECT Id, Name, gender FROM person) ntable;

SELECT p.Name, e.university Univ
FROM person AS p INNER JOIN education AS e
ON p.PersonId = e.PersonId

SELECT Name FROM person
WHERE university = 'KNU' AND gender = 'M';

-- additionaly I can use OR, NOT and wrap complex expressions in ().

SELECT p.Name, count(e.GraduatedUniversity) NumOfUniv
FROM person d INNER JOIN education e
ON p.PersonId = e.PersonId
GROUP BY p.Name
HAVING count(e.PersonId) > 2

Counts number of education for each person and returnes the names of those who have more than 2 degrees.

...
ORDER BY name;
...
ORDER BY price DESC; -- for rich
...
WHERE date IS NULL AND title != 'Teller' AND start >= '2017-01-01';

ON & WHERE:

SELECT p.Name Name, e.university
FROM person p INNER JOIN education e
	ON p.PersonId = e.PersonId
WHERE p.sex = 'F';

Display all pairs of a girl and university she graduated.

DELETE FROM employee
WHERE status = 'fired' AND YEAR(endDate)<=2015;

SELECT Name, Responsibility FROM employee
WHERE Id IN (SELECT EmployeeId FROM product
	WHERE Category = 'Article');

Selects all employees who write articles

...
WHERE state NOT IN ('VA','IL','LA');
...
WHERE lname LIKE 'F%' OR lname LIKE 'G%';
...
WHERE lname REGEXP '^[FG]';

_ Exactly one character
% Any number of characters (including 0
F% Strings beginning with F
%tStrings ending with t
%bas% Strings containing the substring 'bas'
_ _t_ Four-character strings with a t in the third position
_ _ _-_ _-_ _ _ _ 11-character strings with dashes in the fourth and seventh positions

UNION ALL -- unites two tables
UNION -- unites two tables while excluing duplicate rows
INTERSECT -- displays rows that are shared by two tables
EXCEPT --

SELECT ...
INTERSECT
SELECT ...

FUNCTIONS: 
MOD(vl)
POW(vl)
MAX(..)/MIN(..)
SELECT POW(2,10) kilobyte, POW(2,20) megabyte,POW(2,30) gigabyte, POW(2,40) terabyte;
TRUNCATE(NUM, ROUNDINGNUM)
 
SELECT account_id, SIGN(avail_balance), ABS(avail_balance)









Bibliography : Alan Beaulieu Learning SQL
